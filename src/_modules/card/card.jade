mixin card(spec)
  - spec = spec || {}
  - spec.data = spec.data || {}
  - spec.isTemplate = spec.isTemplate || false
  - spec.__class = spec.__class || ''

  .card.blue-grey.darken-1(class=spec.__class)&attributes(attributes)
    .card-content.white-text
      .section.card__main-title
        h2.card-title.t-l=spec.data.class
        .chip
          i.material-icons
            | flash_on
          | #{spec.data.hp}HP
      .divider
      .section
        h3.t-m
          | Subclass
        p.flow-text.subclass(data-api-endpoint='')=spec.data.subclass

    .card-content.white-text
      .divider
      .section
        h3.t-m Proficiency

        ul.collection
          if spec.isTemplate === true
            | {{~it.proficiencies :proficiency:index}}

          - each item in spec.data.proficiency
            li.collection-item.teal.darken-3=item

          if spec.isTemplate === true
            | {{~}}

        h4.t-s
          | Choose 2 additional proficiencies

        if spec.isTemplate === true
          | {{~it.proficiency_choices[0].from :proficiencyChoices:index}}

        - each item in spec.data.proficiencyChoices
          .chip=item

        if spec.isTemplate === true
          | {{~}}

    .card-content.white-text
      .divider
      .section
        h3.t-m Starting Items
        .starting-equipment(data-api-endpoint=(spec.isTemplate == true ? spec.data.startingItem[0] : ''))
          if spec.isTemplate === false
            - each item in spec.data.startingItem
              .chip=item

        .row
          .input-field.col.s12
            input#starting-item-input-1.autocomplete(type='text')
            label(for='starting-item-input-1') Choice 1

          .input-field.col.s12
            input#starting-item-input-2.autocomplete(type='text')
            label(for='starting-item-input-2') Choice 2

    .card-content.white-text
      .divider
      .section
        h3.t-m Saving throws

        if spec.isTemplate === true
          | {{~it.saving_throws :savingThrows:index}}
        - each item in spec.data.savingThrows
          .chip=item

        if spec.isTemplate === true
          | {{~}}

    .card-action
      a.waves-effect.waves-light.btn-large
        i.material-icons.right keyboard_arrow_right
        | Procees with your class

